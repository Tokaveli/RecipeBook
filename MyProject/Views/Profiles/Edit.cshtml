@model MyProject.Models.Profile

@{
    ViewBag.Title = "Profile - edytuj";
}

@if (Context.User.IsInRole("Administrator") || Model.Login == User.Identity.Name)
{
<h2>Edytuj</h2>

using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

  <div class="form-horizontal">

        <h4>Profil</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Płeć", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio">
                    Mężczyzna  @Html.RadioButtonFor(model => model.IsMale, true)
                </div>
                <div class="radio">
                    Kobieta    @Html.RadioButtonFor(model => model.IsMale, false)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
    }


<div>
    @Html.ActionLink("Powrót", "Index","Manage")
</div>
}
    else
    {
    <h2>Brak uprawnień</h2>
    <h3>Aby uzyskać dostęp @Html.ActionLink("zaloguj się", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" }) </h3>
    @Html.ActionLink("Powrót", "Index", "Home")
    }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
