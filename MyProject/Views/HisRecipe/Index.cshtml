<!--model IEnumerable<MyProject.Models.Recipe>-->
@model PagedList.IPagedList<MyProject.Models.Recipe>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Przepisy";
}

<h2>Lista przepisów uzytkownika @ViewBag.UserFirstName</h2>

@using (Html.BeginForm("Index", "HisRecipe", FormMethod.Get))
{
    <p>
        Szukaj po nazwie: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <button type="submit">
            <span class="glyphicon glyphicon-search"></span>
        </button>
        <input type="hidden" name="name" value="@ViewBag.User2" />
    </p>
}
<form action="/HisRecipe" method="get">
    Wybierz kategorię:

    <select name="categoryFilter">
        <option></option>

        @foreach (var category in @ViewBag.Categories)
            {
            <option value="@category.Name" @if (@ViewBag.CategoryFilter == @category.Name) { @Html.Raw("selected")  }>@category.Name</option>
        }
    </select>

    <input type="submit" class="btn btn-secondary" value="Filtruj" />
    <input type="hidden" name="name" value="@ViewBag.User2" />
    Wybierz porę dnia:

    <select name="typesFilter">
        <option></option>

        @foreach (var types in @ViewBag.Types)
            {
            <option value="@types.Name" @if (@ViewBag.TypesFilter == @types.Name) { @Html.Raw("selected")    }>@types.Name</option>
        }
    </select>

    <input type="submit" class="btn btn-secondary" value="Filtruj" />
    <input type="hidden" name="name" value="@ViewBag.User2" />
</form>


<br>

<div class="row">
    <div class="col-md-10">
        <table class="table">
            <tr>
                <th>Zdjęcia</th>
                <th>
                    @Html.ActionLink("Nazwa", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter,name= ViewBag.User2 })
                </th>

                <th>
                    @Html.ActionLink("Kategoria", "Index", new { sortOrder = ViewBag.CategorySortParm, currentFilter = ViewBag.CurrentFilter, name = ViewBag.User2 })
                </th>

                <th>
                    Opis
                </th>
                <th>
                    @Html.ActionLink("Ocena", "Index", new { sortOrder = ViewBag.RateSortParm, currentFilter = ViewBag.CurrentFilter, name = ViewBag.User2 })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                if (item.Profile.Login == @ViewBag.User2)
                {
                    <tr>
                        <td>
                            @if (@item.Picture == null)
                            {
                                <i>Brak obrazka</i>
                            }
                            else
                            {
                                <img src="~/Pictures/@item.Picture" alt="" align="top" height="60" width="60" />
                            }
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Categories.Name)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Description).ToString().Substring(0, (item.Description.Length > 20) ? 20 : item.Description.Length)
                        </td>
                        <td>
                            @if (@item.Ratings.Count() == 0)
                            {
                                <i>Brak oceny</i>
                            }
                            else
                            {
                                @(item.Ratings.Average(r => r.Rate))<span style="color:gold" class="glyphicon glyphicon-star"></span>
                            }
                        </td>

                        <td>
                            @Html.ActionLink("Szczegóły", "Details", "Recipes", new { id = item.ID }, new { @class = "btn btn-info" })
                        </td>
                    </tr>
                }
            }
        </table>


    </div>
</div>
<br />
        Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, name = ViewBag.User2 }))

        @Html.ActionLink("Powrót do listy przepisów", "Index", "Recipes")